name: Merge Main

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

  linting:
    name: Super Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: master
          LINTER_RULES_PATH: ./
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_GITHUB_ACTIONS: false
          JAVASCRIPT_DEFAULT_STYLE: prettier
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          TYPESCRIPT_DEFAULT_STYLE: prettier
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.json

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    # needs: [build, linting]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Test
        run: npm test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install
        run: npm ci

      - name: Test
        run: npm test

  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [integration-test, unit-test, linting, build]
    steps:
      # For now this is required so the push command outputs the correct digest
      # @see https://github.com/docker/build-push-action/issues/461
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT_ID }}/my-test-repo/typescript-node-boilerplate
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_ARTIFACT_REPO_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Google Cloud Tools
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_ARTIFACT_REPO_TOKEN }}
          export_default_credentials: true

      # - name: Deploy To Cloud Run
      #   run: |
      #     gcloud run deploy typescript-node-boilerplate \
      #       --region us-central1 \
      #       --image us-central1-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT_ID }}/my-test-repo/typescript-node-boilerplate@${{ steps.docker_build.outputs.digest }} \
      #       --platform managed \
      #       --allow-unauthenticated \
      #       --labels service=typescript-node-boilerplate
